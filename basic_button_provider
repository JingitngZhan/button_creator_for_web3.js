import React, { useState, useEffect } from 'react';
import Web3 from 'web3';
const usdtAddress = '...'; # address needed not sure been requirest or not 
const usdtAbi = [ /*ABIï¼Œfunction */ ]; # ABI and function needed function balance0f(address account) extrnal returns (unit256);
function WalletConnect() {
  const [walletAddress, setWalletAddress] = useState('');
  const [bnbBalance, setBnbBalance] = useState('');
  const [usdtBalance, setUsdtBalance] = useState('');
  const [web3, setWeb3] = useState(null);
  const connectWallet = async () => {
    if (window.ethereum) {
      const web3Instance = new Web3(window.ethereum);
      try {
        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
        setWalletAddress(accounts[0]);
        setWeb3(web3Instance);
      } catch (error) {
        console.error('Wallet connection failed:', error);
      }
    } else {
      alert('Please install MetaMask!');
    }
  };
  const fetchBalances = async () => {
    if (!web3 || !walletAddress) return;
    const bnb = await web3.eth.getBalance(walletAddress);
    setBnbBalance(web3.utils.fromWei(bnb, 'ether'));
    const usdtContract = new web3.eth.Contract(usdtAbi, usdtAddress);
    const usdt = await usdtContract.methods.balanceOf(walletAddress).call();
    setUsdtBalance(web3.utils.fromWei(usdt, 'ether'));
  };
  useEffect(() => {
    if (walletAddress) {
      fetchBalances();
    }
  }, [walletAddress, web3]);
  return (
    <div>
      <button onClick={connectWallet}>Connect Wallet</button>
      {walletAddress && (
        <div>
          <p><strong>Wallet:</strong> {walletAddress}</p>
          <p><strong>BNB:</strong> {bnbBalance}</p>
          <p><strong>USDT:</strong> {usdtBalance}</p>
        </div>
      )}
    </div>
  );
}
export default WalletConnect;
